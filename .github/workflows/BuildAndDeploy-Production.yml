name: CI/CD Production

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Virtual envs : https://help.github.com/en/articles/virtual-environments-for-github-actions
        os: [macOS-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Test
        run: |
          go test ./... -race -coverprofile=coverage.txt -covermode=atomic
          bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN

      - name: Build
        run: go build -v .

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Deploy to Now
        uses: mikeal/npx@master
        env:
          ZEIT_TOKEN: ${{ secrets.ZEIT_TOKEN }}
        with:
          args: "npx now alias --token=$ZEIT_TOKEN $(npx now --no-clipboard --token=$ZEIT_TOKEN --public) api.augora.fr"

      - name: Notify slack
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"C4H19LCN9\",\"text\":\"Production API successfully deployed :rocket:\"}'
